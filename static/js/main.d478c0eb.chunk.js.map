{"version":3,"sources":["Components/Rolling/Rolling.jsx","redux/actions/types.jsx","Components/Home/Home.jsx","utils/setAuthToken.jsx","redux/actions/authActions.jsx","Components/Auth/Login.jsx","Components/Auth/Household.jsx","Components/Auth/Register.jsx","Components/Navbar/Navbar.jsx","Components/NotFound/NotFound.jsx","Components/private-route/PrivateRoute.jsx","Components/Dashboard/Dashboard.jsx","Components/Leaderboard/leaderboard1.jsx","Components/Leaderboard/leaderboard.jsx","App.js","serviceWorker.js","index.js","redux/reducers/authReducers.jsx","redux/reducers/errorReducers.jsx","redux/reducers/rollingReducers.js","redux/reducers/mqttReducers.js","redux/reducers/index.jsx","redux/store.jsx","redux/actions/mqttActions.js"],"names":["client","require","connect","on","console","log","connected","topic","payload","error","process","exit","Rolling","props","state","users","rolling","formValue","handleSubmit","bind","onChangeForm","e","target","value","this","setState","event","user","preventDefault","publish","history","push","options","map","x","key","name","onSubmit","className","style","marginTop","id","onChange","marginRight","type","Component","GET_ERRORS","USER_LOADING","SET_CURRENT_USER","UPDATE_LEADERBOARD","SET_LEADERBOARD","SET_USERS","Home","auth","isAuthenticated","to","setAuthToken","token","axios","defaults","headers","common","registerUser","userData","dispatch","post","then","res","catch","err","response","data","setCurrentUser","decoded","logoutUser","localStorage","removeItem","Login","onChangeLogin","loginSubmit","email","password","loginUser","errors","nextProps","noValidate","htmlFor","placeholder","classnames","invalid","emailNotFound","passwordIncorrect","setItem","jwt_decode","Household","formValues","number","i","splice","json","JSON","stringify","publishHousehold","textAlign","padding","element","index","handleChange","visibility","onClick","removeFormFields","addFormFields","React","Register","onChangeRegister","registerSubmit","newUser","password2","withRouter","Navbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NotFound","component","rest","render","Dashboard","onLogoutClick","split","Leaderboard1","sortUsersByScore","sortUsersByName","filterRank","increasePage","decreasePage","ranking","asc","alph","page","pageMax","paginate","sort","compareScore","rank","Math","ceil","length","a","b","sheets","reverse","compareName","newRanking","inputLength","slice","toLowerCase","width","paddingTop","marginLeft","colSpan","marginBottom","display","alignItems","justifyContent","cursor","fontWeight","Leaderboard","leaderboard","mqtt","App","jwtToken","store","currentTime","Date","now","exp","window","location","href","exact","path","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","isEmpty","initialState","loading","combineReducers","action","val","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","subscribe","toString","updateValue","parse","updateLeaderboard","household","callback","initialLeaderboard","initialUsers"],"mappings":"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","file":"static/js/main.d478c0eb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport './Rolling.css';\n\nvar mqtt = require('mqtt')\n\nvar client = mqtt.connect('mqtt://test.mosquitto.org:8090')\n\n// handle connect\nclient.on(\"connect\", function () {\n  console.log(\"connected  \" + client.connected);\n})\n\n// handle messages\nclient.on(\"message\", function(topic, payload) {\n})\n\n// handle errors - exit\nclient.on(\"error\", function (error) {\n  console.log(\"Can't connect\" + error);\n  process.exit(1)\n});\n\nfunction publishUser (user) {\n    console.log(\"publishing topic: user\", \" message: \", user);\n    console.log(user)\n    if (client.connected == true) {\n      client.publish('user', user)\n    }\n}\n\nclass Rolling extends Component{\n    constructor(props) { \n        super(props)\n        this.state = {\n          users: props.rolling,\n          formValue: \"\"\n        };\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.onChangeForm = this.onChangeForm.bind(this);\n      }\n\n      onChangeForm(e) {\n          console.log(e.target.value)\n        this.setState({\n            formValue: e.target.value\n        });\n      }\n\n    //  <DropDown onChange = {this.onChangeForm}\n    //  elements={this.state.users}\n    //  selection={{ width: 300, borderRadius: 10 }}\n    ///>\n\n\n      handleSubmit(event) {\n        event.preventDefault();\n        publishUser(this.state.formValue)\n        this.props.history.push(\"/dashboard\")\n      }\n\nrender(){\n   {\n       let options = this.state.users.map((x)=>{\n           return(\n               <option key={x.name}>\n                   {x.name}\n               </option>\n           )\n       })\n   \n  return (\n    <form onSubmit={this.handleSubmit}>\n    <div className=\"container\" style={{ marginTop: 100 }}>\n\n    <select name=\"users\" id=\"users\" onChange={this.onChangeForm} >\n    {options}\n    </select>\n    <div>\n    <button style={{marginRight: 100}} type=\"submit\" className=\"btn btn-md btn-register\">\n    Submit\n    </button>\n    </div>\n    </div>\n    </form>\n  )\n}\n}\n}\n\n\nRolling.propTypes = {\n    rolling: PropTypes.array.isRequired\n  };\n\n  \n  const mapStateToProps = state => ({\n    rolling: state.rolling.rolling\n  });\n  \n  export default connect(mapStateToProps, {})(Rolling);\n","// Errors\nexport const GET_ERRORS = \"GET_ERRORS\";\n\n// Auth\nexport const USER_LOADING = \"USER_LOADING\";\nexport const SET_CURRENT_USER = \"SET_CURRENT_USER\";\n\n// MQTT\nexport const UPDATE_LEADERBOARD = \"UPDATE_LEADERBOARD\"\nexport const SET_LEADERBOARD = \"SEND_HOUSEHOLD\"\n\n//Rolling\nexport const SET_USERS = \"SEND_HOUSEHOLD\"","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './Home.css';\n\nclass Home extends Component {\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n\n  render() {\n    return (\n      <section id=\"banner\" className=\"banner\">\n        <div className=\"container p-0\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"banner-left\">\n                <h1 className=\"text-capitalize\">\n                  Welcome to IoTP!</h1>\n                  <h4>Ready to save the planet one toilet roll at a time?</h4> \n                <div className=\"buttons\">\n                  <Link\n                    to=\"/login\"\n                    className=\"btn btn-lg btn-outline-none border-3 btn-login\"\n                  >\n                    Login\n                  </Link>\n                  <Link\n                    to=\"/register\"\n                    className=\"btn btn-lg btn-outline-none border-3 btn-register\"\n                  >\n                    Signup\n                  </Link>\n                </div>\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"banner-right\">\n                <h1 className=\"text-capitalize\">\n                </h1>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nHome.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {})(Home);\n","import axios from 'axios';\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common['Authorization'] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authorization'];\n  }\n};\nexport default setAuthToken;\n","import axios from 'axios';\nimport setAuthToken from '../../utils/setAuthToken';\nimport jwt_decode from 'jwt-decode';\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING } from './types'; // Register User\nexport const registerUser = (userData, history) => dispatch => {\n  axios\n    .post('/api/users/register', userData)\n    .then(res => history.push('/login')) // re-direct to login on successful register\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n}; // Login - get user token\nexport const loginUser = userData => dispatch => {\n  axios\n    .post('/api/users/login', userData)\n    .then(res => {\n      // Save to localStorage// Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem('jwtToken', token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n}; // Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n}; // User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n}; // Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from local storage\n  localStorage.removeItem('jwtToken');\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n","import React, { Component } from 'react';\nimport './Auth.css';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { loginUser } from '../../redux/actions/authActions';\nimport classnames from 'classnames';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Login page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard'); // push user to dashboard when they login\n    }\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeLogin = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  loginSubmit = e => {\n    e.preventDefault();\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    };\n    this.props.loginUser(userData); // since we handle the redirect within our component, we don't need to pass in this.props.history as a parameter\n  };\n\n  render() {\n    const { email, password, errors } = this.state;\n    return (\n      <section className=\"login\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"login-left\">\n                <h4 className=\"text-capitalize\">\n                  Login to see your household TP usage!\n                </h4>\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"login-right\">\n                <h1>Login</h1>\n                <form noValidate onSubmit={this.loginSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"Email\">Email</label> <br />\n                      <input\n                        type=\"email\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={this.onChangeLogin}\n                        error={errors.email}\n                        className={classnames('', {\n                          invalid: errors.email || errors.emailNotFound\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">\n                        {errors.email}\n                        {errors.emailNotFound}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"Password\">Password</label> <br />\n                      <input\n                        type=\"password\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={this.onChangeLogin}\n                        error={errors.password}\n                        className={classnames('', {\n                          invalid: errors.password || errors.passwordIncorrect\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">\n                        {errors.password}\n                        {errors.passwordIncorrect}\n                      </span>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <button type=\"submit\" className=\"btn btn-md btn-register\">\n                        Login\n                      </button>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <p>\n                        Don't have an account?&nbsp;\n                        <Link to=\"/register\" className=\"text-success\">\n                          Create one\n                        </Link>\n                      </p>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\nexport default connect(mapStateToProps, { loginUser })(Login);\n","import React from \"react\";\nimport './styles.css';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { publishHousehold } from \"../../redux/actions/mqttActions\"\n\nclass Household extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      formValues: [{ name: \"\", number: \"\" }]\n    };\n    this.handleSubmit = this.handleSubmit.bind(this)\n  }\n\n  handleChange(i, e) {\n    let formValues = this.state.formValues;\n    formValues[i][e.target.name] = e.target.value;\n    this.setState({ formValues });\n  }\n\n  addFormFields() {\n    this.setState(({\n      formValues: [...this.state.formValues, { name: \"\", number: \"\" }]\n    }))\n  }\n\n  removeFormFields(i) {\n    let formValues = this.state.formValues;\n    formValues.splice(i, 1);\n    this.setState({ formValues });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    var json = JSON.stringify(this.state.formValues);\n    this.props.publishHousehold(json)\n    this.props.history.push(\"/dashboard\")\n  }\n\n  render() {\n\n    return (\n      <div className=\"container\" style={{ marginTop: 56 }}>\n        <h1 style={{textAlign: \"center\", padding: \"16px 0\"}}>Household Members</h1>\n        <form onSubmit={this.handleSubmit}>\n          {this.state.formValues.map((element, index) => (\n            <div className=\"form-inline\" key={index}>\n              <label>Name</label>\n              <input type=\"text\" name=\"name\" value={element.name || \"\"} onChange={e => this.handleChange(index, e)} />\n              <label>Phone Number</label>\n              <input type=\"tel\" name=\"number\" value={element.number || \"\"} onChange={e => this.handleChange(index, e)} />\n              <button type=\"button\" style={{\n                visibility: index == 0 ? \"hidden\" : \"visible\"\n              }} className=\"button btn-danger remove\" onClick={() => this.removeFormFields(index)}>Remove</button>\n            </div>\n          ))}\n          <div className=\"button-section\">\n            <button style={{marginRight: 8}} className=\"button btn-md add\" type=\"button\" onClick={() => this.addFormFields()}>Add</button>\n            <button className=\"button submit\" type=\"submit\">Submit</button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nHousehold.propTypes = {\n  publishHousehold: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps, { publishHousehold })(Household);","import React, { Component } from 'react';\nimport './Auth.css';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser } from '../../redux/actions/authActions';\nimport classnames from 'classnames';\n\nclass Register extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    };\n  }\n  componentDidMount() {\n    // If logged in and user navigates to Register page, should redirect them to dashboard\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard');\n    }\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.errors) {\n      this.setState({\n        errors: nextProps.errors\n      });\n    }\n  }\n\n  onChangeRegister = e => {\n    this.setState({ [e.target.id]: e.target.value });\n  };\n  registerSubmit = e => {\n    e.preventDefault();\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    };\n    this.props.registerUser(newUser, this.props.history);\n  };\n\n  render() {\n    const { errors, name, password, password2, email } = this.state;\n    return (\n      <section className=\"register\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-lg-6\">\n              <div className=\"signup-left\">\n                <h4 className=\"text-capitalize\">\n                  Register now and start saving!\n                </h4>\n              </div>\n            </div>\n            <div className=\"col-lg-6\">\n              <div className=\"signup-right\">\n                <h1>Signup</h1>\n                <form noValidate onSubmit={this.registerSubmit}>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"name\">Full Name</label> <br />\n                      <input\n                        type=\"text\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your name\"\n                        id=\"name\"\n                        value={name}\n                        onChange={this.onChangeRegister}\n                        error={errors.name}\n                        className={classnames('', {\n                          invalid: errors.name\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.name}</span>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"Email\">Email</label> <br />\n                      <input\n                        type=\"email\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your email\"\n                        id=\"email\"\n                        value={email}\n                        onChange={this.onChangeRegister}\n                        error={errors.email}\n                        className={classnames('', {\n                          invalid: errors.email\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.email}</span>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"Password\">Password</label> <br />\n                      <input\n                        type=\"password\"\n                        className=\"input-control\"\n                        placeholder=\"Enter your password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={this.onChangeRegister}\n                        error={errors.password}\n                        className={classnames('', {\n                          invalid: errors.password\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.password}</span>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <label htmlFor=\"Confirm Password\">Confirm Password</label>\n                      <br />\n                      <input\n                        type=\"password\"\n                        className=\"input-control\"\n                        placeholder=\"Confirm your password\"\n                        id=\"password2\"\n                        value={password2}\n                        onChange={this.onChangeRegister}\n                        error={errors.password2}\n                        className={classnames('', {\n                          invalid: errors.password2\n                        })}\n                      />{' '}\n                      <br />\n                      <span className=\"text-danger\">{errors.password2}</span>\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n        \n                      <button\n                      type=\"submit\" className=\"btn btn-md btn-register\"\n                        >\n                        Signup\n                      </button>\n\n                    </div>\n                  </div>\n                  <div className=\"form-row\">\n                    <div className=\"form-group col-md-12\">\n                      <p>\n                        Already have an account?&nbsp;\n                        <Link to=\"/login\" className=\"text-success\">\n                          Login\n                        </Link>\n                      </p>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register));\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { registerUser, logoutUser } from '../../redux/actions/authActions';\nimport './Navbar.css';\n\nclass Navbar extends Component {\n  render() {\n    const isAuthenticated = this.props.auth.isAuthenticated\n    return (\n      <nav className=\"navbar navbar-expand-md navbar-dark fixed-top\">\n        <div className=\"container\">\n          <Link className=\"navbar-brand border-none\" to={isAuthenticated ? \"/dashboard\" : \"/\"}>\n            IoTP\n          </Link>\n          <button\n            className=\"navbar-toggler d-lg-none\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#collapsibleNavId\"\n            aria-controls=\"collapsibleNavId\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"collapsibleNavId\">\n            <ul className=\"navbar-nav ml-auto mt-2 mt-lg-0\">\n              {\n                isAuthenticated\n                  ? <>\n                    <li className=\"nav-item\">\n                      <Link\n                        className=\"nav-link btn btn-register button-outline-none\"\n                        onClick={() => {\n                          this.props.logoutUser()\n                        }}\n                      >\n                        Logout\n                      </Link>\n                    </li>\n                  </>\n                  : <>\n                    <li className=\"nav-item\">\n                      <Link\n                        className=\"nav-link btn btn-login button-outline-none\"\n                        to=\"/login\"\n                      >\n                        Login\n                      </Link>\n                    </li>\n                    <li className=\"nav-item\">\n                      <Link\n                        className=\"nav-link btn btn-register button-outline-none\"\n                        to=\"/register\"\n                      >\n                        Signup\n                      </Link>\n                    </li>\n                  </>\n              }\n            </ul>\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nNavbar.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, { registerUser, logoutUser })(withRouter(Navbar));\n","import React, { Component } from 'react';\nimport './NotFound.css'\nimport { Link } from 'react-router-dom';\n\nclass NotFound extends Component {\n    render() {\n        return (\n            <section className=\"notfound\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-12\">\n                            <div className=\"content\">\n                                <h1>404</h1>\n                                <h2>Not Found</h2>\n                                <div className=\"content-button\">\n                                    <Link to ='/' className=\"btn btn-lg btn-warning \">Home</Link>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        )\n    }\n}\n\nexport default NotFound\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\n\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      auth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect to=\"/login\" />\n      )\n    }\n  />\n);\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { logoutUser } from '../../redux/actions/authActions';\nimport './Dashboard.css';\nimport { Link } from 'react-router-dom';\n\nclass Dashboard extends Component {\n  onLogoutClick = e => {\n    e.preventDefault();\n    this.props.logoutUser();\n  };\n\n\n\n  render() {\n    const { user } = this.props.auth;\n    return (\n      <section className=\"dashboard\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-12\">\n              <div className=\"content\">\n                <h1>\n                  Hi <b>{user.name.split(' ')[0]} </b>\n                </h1>\n                <Link className=\"btn btn-lg btn-warning mt-5\" to={\"/household\"}>\n                  Set Household\n                </Link>\n                <Link className=\"btn btn-lg btn-warning mt-5\" to={\"/leaderboard\"}>\n                  Leaderboard\n                </Link>\n                <Link className=\"btn btn-lg btn-warning mt-5\" to={\"/rolling\"}>\n                  Start rolling?\n                </Link>\n                <Link className=\"btn btn-lg btn-warning mt-5\" onClick={this.onLogoutClick}>\n                  Logout\n                </Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, { logoutUser })(Dashboard);\n\n","import React, { Component } from 'react';\nimport './leaderboard.css';\n\n/**\n   * @class Leaderboard\n   * @desc Compares the score property of each user object\n   * @param {Prop} users-an array of objects with name and score properties\n   * @param {Prop} paginate-integer to determine how many users to display on each page\n*/\nclass Leaderboard1 extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sortUsersByScore = this.sortUsersByScore.bind(this);\n    this.sortUsersByName = this.sortUsersByName.bind(this);\n    this.filterRank = this.filterRank.bind(this);\n    this.increasePage = this.increasePage.bind(this);\n    this.decreasePage = this.decreasePage.bind(this);\n\n    this.state = {\n      users: this.props.users,\n      ranking: [],\n      asc: false,\n      alph: false,\n      page: 1,\n      pageMax: 1,\n    };\n  }\n\n  /**\n     * @function componentDidMount\n     * @desc Sorts users by score then adds a ranking key to each user object when the component loads. Then sets the ranking state\n  */\n  componentDidMount() {\n    const ranking = this.state.users;\n    const paginate = this.props.paginate;\n    ranking.sort(this.compareScore);\n    ranking.map((user, index) => user.rank = index + 1);\n    ranking.map((user, index) => user.page = Math.ceil((index + 1) / paginate));\n    this.setState({ pageMax: ranking[ranking.length - 1].page })\n    this.setState({ ranking: ranking });\n  }\n\n  /**\n     * @function compareScore\n     * @desc Compares the score property of each user object\n     * @param {Object, Object} user\n  */\n  compareScore(a, b) {\n    if (a.sheets < b.sheets)\n      return 1;\n    if (a.sheets > b.sheets)\n      return -1;\n    return 0;\n  }\n\n  /**\n     * @function compareName\n     * @desc Compares the name property of each user object alphabetically\n     * @param {Object, Object} user\n  */\n  compareName(a, b) {\n    if (a.name < b.name)\n      return -1;\n    if (a.name > b.name)\n      return 1;\n    return 0;\n  }\n\n  /**\n     * @function sortUsersByScore\n     * @desc Sorts the ranking by score either ascending or descending\n  */\n  sortUsersByScore() {\n    const ranking = this.state.ranking;\n    const paginate = this.props.paginate;\n    if (this.state.asc === true) {\n      ranking.sort(this.compareScore).reverse();\n      this.setState({ asc: false });\n      this.setState({ alph: false });\n    } else {\n      ranking.sort(this.compareScore);\n      this.setState({ asc: true });\n      this.setState({ alph: false });\n    }\n  }\n\n  /**\n     * @function sortUsersByName\n     * @desc Sorts the ranking by name alphabetically either ascending or descending\n  */\n  sortUsersByName() {\n    const ranking = this.state.ranking;\n    const paginate = this.props.paginate;\n    if (this.state.alph === true) {\n      ranking.sort(this.compareName).reverse();\n      ranking.map((user, index) => user.page = Math.ceil((index + 1) / paginate));\n      this.setState({ ranking: ranking });\n      this.setState({ alph: false });\n    } else {\n      ranking.sort(this.compareName);\n      ranking.map((user, index) => user.page = Math.ceil((index + 1) / paginate));\n      this.setState({ ranking: ranking });\n      this.setState({ alph: true });\n      this.setState({ asc: true });\n    }\n  }\n\n  /**\n     * @function filterRank\n     * @desc Filters through the ranking to find matches and sorts all matches by score\n     * @param {String} search input\n  */\n  filterRank(e) {\n\n    const ranking = this.state.users;\n    const paginate = this.props.paginate;\n    const newRanking = [];\n    const inputLength = e.target.value.length\n    for (var i = 0; i < ranking.length; i++) {\n      const str = ranking[i].name.slice(0, inputLength).toLowerCase();\n      if (str === e.target.value.toLowerCase()) {\n        newRanking.push(ranking[i]);\n      }\n    }\n    newRanking.sort(this.compareScore).reverse();\n    newRanking.map((user, index) => user.page = Math.ceil((index + 1) / paginate));\n    this.setState({ ranking: newRanking });\n    this.setState({ page: 1 });\n    this.setState({ pageMax: newRanking[newRanking.length - 1].page })\n  }\n\n  /**\n     * @function increasePage\n     * @desc Increments page by one\n     * @param {Event} Click\n  */\n  increasePage(e) {\n    let page = this.state.page;\n    if (page < this.state.pageMax) {\n      page += 1;\n    }\n    this.setState({ page: page });\n  }\n\n  /**\n     * @function increasePage\n     * @desc Decrements page by one\n     * @param {Event} Click\n  */\n  decreasePage(e) {\n    let page = this.state.page;\n    if (page > 1) {\n      page -= 1;\n    }\n    this.setState({ page: page });\n  }\n\n  /**\n     * @function render\n     * @desc renders jsx\n  */\n  render() {\n    return (\n      <div style={{\n        width: \"fit-content\",\n        paddingTop: \"32px\",\n        marginLeft: \"auto\",\n        marginRight: \"auto\"\n      }}>\n        <table id=\"lBoard\" style={{ width: 400 }}>\n          <tbody className='ranking'>\n            <tr>\n              <td colSpan=\"3\"><h1 style={{ textAlign: \"center\", marginBottom: 0 }}>Leaderboard</h1></td>\n            </tr>\n            <tr>\n              <td colSpan=\"3\">\n                <form onChange={this.filterRank} style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  justifyContent: \"center\"\n                }}>\n                  Name:&nbsp;<input type=\"search\" name=\"search\" placeholder=\"Search\" />\n                </form>\n              </td>\n            </tr>\n            <tr>\n              <td className='rank-header sortScore' onClick={this.sortUsersByScore}> Rank </td>\n              <td className='rank-header sortAlpha' onClick={this.sortUsersByName}> Name </td>\n              <td className='rank-header' onClick={this.sortUsersByScore}> Sheets </td>\n            </tr>\n            {\n              this.state.ranking.map((user, index) =>\n                <tr className='ranking' key={index}>\n                  {user.page == this.state.page ? <td className='data'>{user.rank}</td> : null}\n                  {user.page == this.state.page ? <td className='data'>{user.name}</td> : null}\n                  {user.page == this.state.page ? <td className='data'>{user.sheets}</td> : null}\n                </tr>\n              )\n            }\n          </tbody>\n        </table>\n        <div style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"space-evenly\",\n          marginTop: 24\n        }}>\n          <button style={{\n            visibility: this.state.page == 1 ? \"hidden\" : \"visible\"\n          }} className='decrement btn btn-primary' onClick={this.decreasePage}>prev</button>\n          {this.state.page == 1 ? <></> : <div style={{ cursor: \"pointer\" }} onClick={this.decreasePage}> {this.state.page - 1}</div>}\n          <div style={{ fontWeight: \"bold\", cursor: \"pointer\" }}> {this.state.page}</div>\n          {this.state.page < this.state.pageMax ? <div style={{ cursor: \"pointer\" }} onClick={this.increasePage}> {this.state.page + 1}</div> : <></>}\n          <button style={{\n            visibility: this.state.page == this.state.pageMax ? \"hidden\" : \"visible\"\n          }} className='increment btn btn-primary' onClick={this.increasePage}>next</button>\n        </div>\n      </div>\n    );\n  }\n}\nexport default Leaderboard1;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Leaderboard1 from './leaderboard1.jsx';\n\n\nclass Leaderboard extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      users: props.leaderboard,\n      paginate: 10\n    };\n  }\n  render() {\n    return (\n      <div>\n        <div style={{marginTop: 56}} className=\"container\">\n          <Leaderboard1 users={this.state.users} paginate={this.state.paginate} />\n        </div>\n      </div>\n    );\n  }\n}\n\nLeaderboard.propTypes = {\n  leaderboard: PropTypes.array.isRequired\n};\n\nconst mapStateToProps = state => ({\n  leaderboard: state.mqtt.leaderboard\n});\n\nexport default connect(mapStateToProps, {})(Leaderboard);","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport Home from './Components/Home/Home';\nimport Login from './Components/Auth/Login';\nimport Household from './Components/Auth/Household';\nimport Register from './Components/Auth/Register';\nimport Navbar from './Components/Navbar/Navbar';\nimport NotFound from './Components/NotFound/NotFound';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport jwt_decode from 'jwt-decode';\nimport setAuthToken from './utils/setAuthToken';\nimport { setCurrentUser, logoutUser } from './redux/actions/authActions';\nimport PrivateRoute from './Components/private-route/PrivateRoute';\nimport Dashboard from './Components/Dashboard/Dashboard';\nimport Leaderboard from './Components/Leaderboard/leaderboard';\nimport Rolling from './Components/Rolling/Rolling';\n\nfunction App() {\n  // Check for token to keep user logged in\n  if (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded)); // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser()); // Redirect to login\n      window.location.href = './login';\n    }\n  }\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/register\" component={Register} />\n          <Route path=\"/login\" component={Login} />\n          <Switch>\n            <PrivateRoute exact path=\"/dashboard\" component={Dashboard} />\n            <PrivateRoute exact path=\"/leaderboard\" component={Leaderboard} />\n            <PrivateRoute exact path=\"/household\" component={Household} />\n            <PrivateRoute exact path=\"/rolling\" component={Rolling} />\n            <Route path=\"*\" component={NotFound} />\n          </Switch>\n          <Route path=\"*\" component={NotFound} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { SET_CURRENT_USER, USER_LOADING } from '../actions/types';\nconst isEmpty = require('is-empty');\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  loading: false\n};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      };\n    case USER_LOADING:\n      return {\n        ...state,\n        loading: true\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS } from '../actions/types';\nconst initialState = {};\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { SET_USERS } from '../actions/types';\n\nconst initialState = {\n  rolling: [\n    { name: '------- Select HouseHold Member -------' }\n  ]\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_USERS:\n      return {\n        ...state,\n        rolling: action.payload\n      };\n        default:\n          return state;\n      }\n}\n\n","import { UPDATE_LEADERBOARD, SET_LEADERBOARD } from '../actions/types';\nconst initialState = {\n  leaderboard: [\n    { name: \"\", sheets: 0 }\n  ]\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_LEADERBOARD:\n      return {\n        ...state,\n        leaderboard: action.payload\n      }\n    case UPDATE_LEADERBOARD:\n      return {\n        ...state,\n        leaderboard: state.leaderboard.map(\n          (val) => val.name == action.payload.name ? val.sheets=action.payload.sheets : val\n        )\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport authReducer from './authReducers';\nimport errorReducer from './errorReducers';\nimport rollingReducer from './rollingReducers';\nimport mqttReducer from './mqttReducers';\n\nexport default combineReducers({\n  auth: authReducer,\n  errors: errorReducer,\n  mqtt: mqttReducer,\n  rolling: rollingReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/index';\nconst initialState = {};\nconst middleware = [thunk];\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    (window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()(\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\n          window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()\n      )) ||\n      compose\n  )\n);\nexport default store;\n","import { UPDATE_LEADERBOARD, SET_LEADERBOARD, SET_USERS } from './types'; // Register User\nimport store from '../store';\n\nvar mqtt = require('mqtt')\n\nvar client = mqtt.connect('mqtt://test.mosquitto.org:8090')\n\n// handle connect\nclient.on(\"connect\", function () {\n  console.log(\"connected  \" + client.connected);\n  console.log(\"subscibing to topic: score\");\n  client.subscribe(\"score\")\n})\n\n// handle messages\nclient.on(\"message\", function(topic, payload) {\n  let json = payload.toString()\n  let updateValue = JSON.parse(json)\n  console.log(updateValue)\n  store.dispatch(updateLeaderboard(updateValue))\n})\n\n// handle errors - exit\nclient.on(\"error\", function (error) {\n  console.log(\"Can't connect\" + error);\n  process.exit(1)\n});\n\nexport const updateLeaderboard = (updateValue) => dispatch => {\n  dispatch({\n    type: UPDATE_LEADERBOARD,\n    payload: updateValue\n  })\n}\n\nexport const publishHousehold = (household, callback) => dispatch => {\n  console.log(\"publishing topic: household\", \" message: \", household);\n\n  if (client.connected == true) {\n    client.publish('household', household)\n  }\n\n  let initialLeaderboard = JSON.parse(household).map((val) => ({name: val.name, sheets: 0}))\n  let initialUsers = JSON.parse(household).map((val) => ({name: val.name}))\n\n  dispatch({\n    type: SET_USERS,\n    payload: initialUsers\n  })\n\n  dispatch({\n    type: SET_LEADERBOARD,\n    payload: initialLeaderboard\n  })\n\n}\n"],"sourceRoot":""}